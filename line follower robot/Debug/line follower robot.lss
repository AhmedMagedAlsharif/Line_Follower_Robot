
line follower robot.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000934  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000026c  00800060  00000934  000009c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  008002cc  008002cc  00000c34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c34  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c0  00000000  00000000  00000c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001077  00000000  00000000  00000d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000267  00000000  00000000  00001d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003f4  00000000  00000000  00002002  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000224  00000000  00000000  000023f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002e5  00000000  00000000  0000261c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000054e  00000000  00000000  00002901  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  00002e4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	12 e0       	ldi	r17, 0x02	; 2
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e3       	ldi	r30, 0x34	; 52
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 3c       	cpi	r26, 0xCC	; 204
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	22 e0       	ldi	r18, 0x02	; 2
  78:	ac ec       	ldi	r26, 0xCC	; 204
  7a:	b2 e0       	ldi	r27, 0x02	; 2
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 3c       	cpi	r26, 0xCD	; 205
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <main>
  8a:	0c 94 98 04 	jmp	0x930	; 0x930 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pwm_init>:

float generalspeed=0.35;

void pwm_init()
{
	DDRD|=(1<<5)|(1<<4);
  92:	81 b3       	in	r24, 0x11	; 17
  94:	80 63       	ori	r24, 0x30	; 48
  96:	81 bb       	out	0x11, r24	; 17
	TCCR1A|=(1<<1)|(1<<7)|(1<<5);
  98:	8f b5       	in	r24, 0x2f	; 47
  9a:	82 6a       	ori	r24, 0xA2	; 162
  9c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B|=(4<<0)|(1<<3)|(1<<4);			//prescaler= clk/256,fast pwm mode icr1
  9e:	8e b5       	in	r24, 0x2e	; 46
  a0:	8c 61       	ori	r24, 0x1C	; 28
  a2:	8e bd       	out	0x2e, r24	; 46
	ICR1=62;
  a4:	8e e3       	ldi	r24, 0x3E	; 62
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	97 bd       	out	0x27, r25	; 39
  aa:	86 bd       	out	0x26, r24	; 38
	OCR1A=0;
  ac:	1b bc       	out	0x2b, r1	; 43
  ae:	1a bc       	out	0x2a, r1	; 42
  b0:	08 95       	ret

000000b2 <motors_init>:
}

void motors_init(void)
{
	DDRD|=(1<<PD0)|(1<<PD1);
  b2:	81 b3       	in	r24, 0x11	; 17
  b4:	83 60       	ori	r24, 0x03	; 3
  b6:	81 bb       	out	0x11, r24	; 17
  b8:	08 95       	ret

000000ba <right_motor_speed>:
}

void right_motor_speed(float speed)
{
  ba:	cf 92       	push	r12
  bc:	df 92       	push	r13
  be:	ef 92       	push	r14
  c0:	ff 92       	push	r15
  c2:	6b 01       	movw	r12, r22
  c4:	7c 01       	movw	r14, r24
	if (speed>=0)
  c6:	20 e0       	ldi	r18, 0x00	; 0
  c8:	30 e0       	ldi	r19, 0x00	; 0
  ca:	a9 01       	movw	r20, r18
  cc:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__gesf2>
  d0:	88 23       	and	r24, r24
  d2:	c4 f0       	brlt	.+48     	; 0x104 <right_motor_speed+0x4a>
	{
		PORTD|=(1<<PD0);
  d4:	90 9a       	sbi	0x12, 0	; 18
		OCR1A=(generalspeed*speed*62);
  d6:	20 91 60 00 	lds	r18, 0x0060
  da:	30 91 61 00 	lds	r19, 0x0061
  de:	40 91 62 00 	lds	r20, 0x0062
  e2:	50 91 63 00 	lds	r21, 0x0063
  e6:	c7 01       	movw	r24, r14
  e8:	b6 01       	movw	r22, r12
  ea:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	48 e7       	ldi	r20, 0x78	; 120
  f4:	52 e4       	ldi	r21, 0x42	; 66
  f6:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
  fa:	0e 94 90 03 	call	0x720	; 0x720 <__fixunssfsi>
  fe:	7b bd       	out	0x2b, r23	; 43
 100:	6a bd       	out	0x2a, r22	; 42
 102:	1a c0       	rjmp	.+52     	; 0x138 <right_motor_speed+0x7e>
	}
	else
	{
		PORTD&=~(1<<PD0);
 104:	90 98       	cbi	0x12, 0	; 18
		OCR1A=(-1*generalspeed*speed*62);
 106:	80 91 60 00 	lds	r24, 0x0060
 10a:	90 91 61 00 	lds	r25, 0x0061
 10e:	a0 91 62 00 	lds	r26, 0x0062
 112:	b0 91 63 00 	lds	r27, 0x0063
 116:	bc 01       	movw	r22, r24
 118:	cd 01       	movw	r24, r26
 11a:	90 58       	subi	r25, 0x80	; 128
 11c:	a7 01       	movw	r20, r14
 11e:	96 01       	movw	r18, r12
 120:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	48 e7       	ldi	r20, 0x78	; 120
 12a:	52 e4       	ldi	r21, 0x42	; 66
 12c:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 130:	0e 94 90 03 	call	0x720	; 0x720 <__fixunssfsi>
 134:	7b bd       	out	0x2b, r23	; 43
 136:	6a bd       	out	0x2a, r22	; 42
	}
	
}
 138:	ff 90       	pop	r15
 13a:	ef 90       	pop	r14
 13c:	df 90       	pop	r13
 13e:	cf 90       	pop	r12
 140:	08 95       	ret

00000142 <left_motor_speed>:

void left_motor_speed(float speed)
{
 142:	cf 92       	push	r12
 144:	df 92       	push	r13
 146:	ef 92       	push	r14
 148:	ff 92       	push	r15
 14a:	6b 01       	movw	r12, r22
 14c:	7c 01       	movw	r14, r24
	if (speed>=0)
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	a9 01       	movw	r20, r18
 154:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__gesf2>
 158:	88 23       	and	r24, r24
 15a:	c4 f0       	brlt	.+48     	; 0x18c <left_motor_speed+0x4a>
	{
		PORTD|=(1<<PD1);
 15c:	91 9a       	sbi	0x12, 1	; 18
		OCR1B=(generalspeed*speed*62);
 15e:	20 91 60 00 	lds	r18, 0x0060
 162:	30 91 61 00 	lds	r19, 0x0061
 166:	40 91 62 00 	lds	r20, 0x0062
 16a:	50 91 63 00 	lds	r21, 0x0063
 16e:	c7 01       	movw	r24, r14
 170:	b6 01       	movw	r22, r12
 172:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	48 e7       	ldi	r20, 0x78	; 120
 17c:	52 e4       	ldi	r21, 0x42	; 66
 17e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 182:	0e 94 90 03 	call	0x720	; 0x720 <__fixunssfsi>
 186:	79 bd       	out	0x29, r23	; 41
 188:	68 bd       	out	0x28, r22	; 40
 18a:	1a c0       	rjmp	.+52     	; 0x1c0 <left_motor_speed+0x7e>
	}
	else
	{
		PORTD&=~(1<<PD1);
 18c:	91 98       	cbi	0x12, 1	; 18
		OCR1B=(-1*generalspeed*speed*62);
 18e:	80 91 60 00 	lds	r24, 0x0060
 192:	90 91 61 00 	lds	r25, 0x0061
 196:	a0 91 62 00 	lds	r26, 0x0062
 19a:	b0 91 63 00 	lds	r27, 0x0063
 19e:	bc 01       	movw	r22, r24
 1a0:	cd 01       	movw	r24, r26
 1a2:	90 58       	subi	r25, 0x80	; 128
 1a4:	a7 01       	movw	r20, r14
 1a6:	96 01       	movw	r18, r12
 1a8:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	48 e7       	ldi	r20, 0x78	; 120
 1b2:	52 e4       	ldi	r21, 0x42	; 66
 1b4:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__mulsf3>
 1b8:	0e 94 90 03 	call	0x720	; 0x720 <__fixunssfsi>
 1bc:	79 bd       	out	0x29, r23	; 41
 1be:	68 bd       	out	0x28, r22	; 40
	}
	
}
 1c0:	ff 90       	pop	r15
 1c2:	ef 90       	pop	r14
 1c4:	df 90       	pop	r13
 1c6:	cf 90       	pop	r12
 1c8:	08 95       	ret

000001ca <spi_init>:
};


void spi_init()
{
	DDRB = (1<<MOSI)|(1<<SCK)|(1<<SS)|(1<<RST)|(1<<DC);				/* Set MOSI and SCK output, all others input */
 1ca:	83 eb       	ldi	r24, 0xB3	; 179
 1cc:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<RST);												/* define reset pin as a output */
 1ce:	c0 9a       	sbi	0x18, 0	; 24
	DDRB &= ~(1<<MISO);												/* define MISO pin as a input */
 1d0:	be 98       	cbi	0x17, 6	; 23
	PORTB |= (1<<SS);												/* Make SS pin as a output */
 1d2:	c4 9a       	sbi	0x18, 4	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);							/* Enable SPE, MSTR and SPR0 bit in SPI control register */
 1d4:	81 e5       	ldi	r24, 0x51	; 81
 1d6:	8d b9       	out	0x0d, r24	; 13
 1d8:	08 95       	ret

000001da <spi_write>:
	return(SPDR);													/* Return the SPDR value */
}

void spi_write(char write_data)
{
	SPDR = write_data;
 1da:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));										/* wait here while SPIF flag set */
 1dc:	77 9b       	sbis	0x0e, 7	; 14
 1de:	fe cf       	rjmp	.-4      	; 0x1dc <spi_write+0x2>
}
 1e0:	08 95       	ret

000001e2 <lcd_cmd>:

void lcd_cmd(char DATA)
{
	PORTB &= ~(1<<DC);				/* make DC pin to logic zero for command operation */
 1e2:	c1 98       	cbi	0x18, 1	; 24
	ssenable;				/* enable SS pin to slave selection */	
 1e4:	c4 98       	cbi	0x18, 4	; 24
	spi_write(DATA);				/* send data on data register */
 1e6:	0e 94 ed 00 	call	0x1da	; 0x1da <spi_write>
	PORTB |= (1<<DC);				/* make DC pin to logic high for data operation */
 1ea:	c1 9a       	sbi	0x18, 1	; 24
	ssdisable;
 1ec:	c4 9a       	sbi	0x18, 4	; 24
 1ee:	08 95       	ret

000001f0 <print_data>:
		spi_write(0x00);
		ssdisable;
}

void print_data(char *DATA)
{
 1f0:	8f 92       	push	r8
 1f2:	9f 92       	push	r9
 1f4:	af 92       	push	r10
 1f6:	bf 92       	push	r11
 1f8:	cf 92       	push	r12
 1fa:	df 92       	push	r13
 1fc:	ef 92       	push	r14
 1fe:	ff 92       	push	r15
 200:	0f 93       	push	r16
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	6c 01       	movw	r12, r24
	PORTB |= (1<<DC);									/* make DC pin to logic high for data operation */
 20a:	c1 9a       	sbi	0x18, 1	; 24
	ssenable;									/* enable SS pin to slave selection */
 20c:	c4 98       	cbi	0x18, 4	; 24
	int lenan = strlen(DATA);							/* measure the length of data */
 20e:	fc 01       	movw	r30, r24
 210:	01 90       	ld	r0, Z+
 212:	00 20       	and	r0, r0
 214:	e9 f7       	brne	.-6      	; 0x210 <print_data+0x20>
 216:	31 97       	sbiw	r30, 0x01	; 1
 218:	5f 01       	movw	r10, r30
 21a:	a8 1a       	sub	r10, r24
 21c:	b9 0a       	sbc	r11, r25
	for (int g=0; g<lenan; g++)
 21e:	1a 14       	cp	r1, r10
 220:	1b 04       	cpc	r1, r11
 222:	54 f5       	brge	.+84     	; 0x278 <print_data+0x88>
 224:	e1 2c       	mov	r14, r1
 226:	f1 2c       	mov	r15, r1
		spi_write(0x00);
		ssdisable;
}

void print_data(char *DATA)
{
 228:	81 2c       	mov	r8, r1
 22a:	91 2c       	mov	r9, r1
 22c:	1f c0       	rjmp	.+62     	; 0x26c <print_data+0x7c>
	int lenan = strlen(DATA);							/* measure the length of data */
	for (int g=0; g<lenan; g++)
	{
		for (int index=0; index<5; index++)
		{
			spi_write(ASCII[DATA[g] - 0x20][index]);	/* send the data on data register */			
 22e:	f8 01       	movw	r30, r16
 230:	80 81       	ld	r24, Z
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	80 97       	sbiw	r24, 0x20	; 32
 236:	fc 01       	movw	r30, r24
 238:	ee 0f       	add	r30, r30
 23a:	ff 1f       	adc	r31, r31
 23c:	ee 0f       	add	r30, r30
 23e:	ff 1f       	adc	r31, r31
 240:	e8 0f       	add	r30, r24
 242:	f9 1f       	adc	r31, r25
 244:	ec 0f       	add	r30, r28
 246:	fd 1f       	adc	r31, r29
 248:	e4 51       	subi	r30, 0x14	; 20
 24a:	ff 4f       	sbci	r31, 0xFF	; 255
 24c:	80 81       	ld	r24, Z
 24e:	0e 94 ed 00 	call	0x1da	; 0x1da <spi_write>
	PORTB |= (1<<DC);									/* make DC pin to logic high for data operation */
	ssenable;									/* enable SS pin to slave selection */
	int lenan = strlen(DATA);							/* measure the length of data */
	for (int g=0; g<lenan; g++)
	{
		for (int index=0; index<5; index++)
 252:	21 96       	adiw	r28, 0x01	; 1
 254:	c5 30       	cpi	r28, 0x05	; 5
 256:	d1 05       	cpc	r29, r1
 258:	51 f7       	brne	.-44     	; 0x22e <print_data+0x3e>
		{
			spi_write(ASCII[DATA[g] - 0x20][index]);	/* send the data on data register */			
		}
		spi_write(0x00);
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	0e 94 ed 00 	call	0x1da	; 0x1da <spi_write>
void print_data(char *DATA)
{
	PORTB |= (1<<DC);									/* make DC pin to logic high for data operation */
	ssenable;									/* enable SS pin to slave selection */
	int lenan = strlen(DATA);							/* measure the length of data */
	for (int g=0; g<lenan; g++)
 260:	ff ef       	ldi	r31, 0xFF	; 255
 262:	ef 1a       	sub	r14, r31
 264:	ff 0a       	sbc	r15, r31
 266:	ae 14       	cp	r10, r14
 268:	bf 04       	cpc	r11, r15
 26a:	31 f0       	breq	.+12     	; 0x278 <print_data+0x88>
		spi_write(0x00);
		ssdisable;
}

void print_data(char *DATA)
{
 26c:	c8 2d       	mov	r28, r8
 26e:	d9 2d       	mov	r29, r9
 270:	86 01       	movw	r16, r12
 272:	0e 0d       	add	r16, r14
 274:	1f 1d       	adc	r17, r15
 276:	db cf       	rjmp	.-74     	; 0x22e <print_data+0x3e>
		{
			spi_write(ASCII[DATA[g] - 0x20][index]);	/* send the data on data register */			
		}
		spi_write(0x00);
	}							
	ssdisable;									
 278:	c4 9a       	sbi	0x18, 4	; 24
}
 27a:	df 91       	pop	r29
 27c:	cf 91       	pop	r28
 27e:	1f 91       	pop	r17
 280:	0f 91       	pop	r16
 282:	ff 90       	pop	r15
 284:	ef 90       	pop	r14
 286:	df 90       	pop	r13
 288:	cf 90       	pop	r12
 28a:	bf 90       	pop	r11
 28c:	af 90       	pop	r10
 28e:	9f 90       	pop	r9
 290:	8f 90       	pop	r8
 292:	08 95       	ret

00000294 <lcd_reset>:

void lcd_reset()					/* reset the Display at the beginning of initialization */
{
	PORTB &= ~(1<<RST);
 294:	c0 98       	cbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 296:	2f ef       	ldi	r18, 0xFF	; 255
 298:	81 ee       	ldi	r24, 0xE1	; 225
 29a:	94 e0       	ldi	r25, 0x04	; 4
 29c:	21 50       	subi	r18, 0x01	; 1
 29e:	80 40       	sbci	r24, 0x00	; 0
 2a0:	90 40       	sbci	r25, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <lcd_reset+0x8>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <lcd_reset+0x12>
 2a6:	00 00       	nop
	_delay_ms(100);
	PORTB |= (1<<RST);
 2a8:	c0 9a       	sbi	0x18, 0	; 24
 2aa:	08 95       	ret

000002ac <nokia_lcd_init>:
}

void nokia_lcd_init()
{
	spi_init();
 2ac:	0e 94 e5 00 	call	0x1ca	; 0x1ca <spi_init>
	lcd_reset();					/* reset the display */
 2b0:	0e 94 4a 01 	call	0x294	; 0x294 <lcd_reset>
	lcd_cmd(0x21);				/* command set in addition mode */
 2b4:	81 e2       	ldi	r24, 0x21	; 33
 2b6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0xC0);				/* set the voltage by sending C0 means VOP = 5V */
 2ba:	80 ec       	ldi	r24, 0xC0	; 192
 2bc:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0x07);				/* set the temp. coefficient to 3 */
 2c0:	87 e0       	ldi	r24, 0x07	; 7
 2c2:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0x13);				/* set value of Voltage Bias System */
 2c6:	83 e1       	ldi	r24, 0x13	; 19
 2c8:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0x20);				/* command set in basic mode */
 2cc:	80 e2       	ldi	r24, 0x20	; 32
 2ce:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0x0C);				/* display result in normal mode */
 2d2:	8c e0       	ldi	r24, 0x0C	; 12
 2d4:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
 2d8:	08 95       	ret

000002da <lcd_setxy>:
}

void lcd_setxy(char x, char y)		/* set the column and row */
{
 2da:	cf 93       	push	r28
 2dc:	c6 2f       	mov	r28, r22
	lcd_cmd(0x80|x);
 2de:	80 68       	ori	r24, 0x80	; 128
 2e0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
	lcd_cmd(0x40|y);
 2e4:	8c 2f       	mov	r24, r28
 2e6:	80 64       	ori	r24, 0x40	; 64
 2e8:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <lcd_cmd>
}
 2ec:	cf 91       	pop	r28
 2ee:	08 95       	ret

000002f0 <line_following>:
	
}

void line_following()
{
	right_motor_speed(1);
 2f0:	60 e0       	ldi	r22, 0x00	; 0
 2f2:	70 e0       	ldi	r23, 0x00	; 0
 2f4:	80 e8       	ldi	r24, 0x80	; 128
 2f6:	9f e3       	ldi	r25, 0x3F	; 63
 2f8:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
	left_motor_speed(1);
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	70 e0       	ldi	r23, 0x00	; 0
 300:	80 e8       	ldi	r24, 0x80	; 128
 302:	9f e3       	ldi	r25, 0x3F	; 63
 304:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 308:	08 95       	ret

0000030a <ninety_degree_right>:
}

void ninety_degree_right()
{
	left_motor_speed(0);
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	70 e0       	ldi	r23, 0x00	; 0
 30e:	cb 01       	movw	r24, r22
 310:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
	right_motor_speed(0);
 314:	60 e0       	ldi	r22, 0x00	; 0
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	cb 01       	movw	r24, r22
 31a:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 31e:	2f ef       	ldi	r18, 0xFF	; 255
 320:	81 ee       	ldi	r24, 0xE1	; 225
 322:	94 e0       	ldi	r25, 0x04	; 4
 324:	21 50       	subi	r18, 0x01	; 1
 326:	80 40       	sbci	r24, 0x00	; 0
 328:	90 40       	sbci	r25, 0x00	; 0
 32a:	e1 f7       	brne	.-8      	; 0x324 <ninety_degree_right+0x1a>
 32c:	00 c0       	rjmp	.+0      	; 0x32e <ninety_degree_right+0x24>
 32e:	00 00       	nop
	_delay_ms(100);
	left_motor_speed(0.7);
 330:	63 e3       	ldi	r22, 0x33	; 51
 332:	73 e3       	ldi	r23, 0x33	; 51
 334:	83 e3       	ldi	r24, 0x33	; 51
 336:	9f e3       	ldi	r25, 0x3F	; 63
 338:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
	while(PINA!=0b00001100);
 33c:	89 b3       	in	r24, 0x19	; 25
 33e:	8c 30       	cpi	r24, 0x0C	; 12
 340:	e9 f7       	brne	.-6      	; 0x33c <ninety_degree_right+0x32>
	left_motor_speed(0);
 342:	60 e0       	ldi	r22, 0x00	; 0
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	cb 01       	movw	r24, r22
 348:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	81 ee       	ldi	r24, 0xE1	; 225
 350:	94 e0       	ldi	r25, 0x04	; 4
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <ninety_degree_right+0x48>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <ninety_degree_right+0x52>
 35c:	00 00       	nop
 35e:	08 95       	ret

00000360 <ninety_degree_left>:
	_delay_ms(100);
}

void ninety_degree_left()
{
	right_motor_speed(0);
 360:	60 e0       	ldi	r22, 0x00	; 0
 362:	70 e0       	ldi	r23, 0x00	; 0
 364:	cb 01       	movw	r24, r22
 366:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
	left_motor_speed(0);
 36a:	60 e0       	ldi	r22, 0x00	; 0
 36c:	70 e0       	ldi	r23, 0x00	; 0
 36e:	cb 01       	movw	r24, r22
 370:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	81 ee       	ldi	r24, 0xE1	; 225
 378:	94 e0       	ldi	r25, 0x04	; 4
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <ninety_degree_left+0x1a>
 382:	00 c0       	rjmp	.+0      	; 0x384 <ninety_degree_left+0x24>
 384:	00 00       	nop
	_delay_ms(100);
	right_motor_speed(0.7);
 386:	63 e3       	ldi	r22, 0x33	; 51
 388:	73 e3       	ldi	r23, 0x33	; 51
 38a:	83 e3       	ldi	r24, 0x33	; 51
 38c:	9f e3       	ldi	r25, 0x3F	; 63
 38e:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
	while(PINA!=0b00001100);
 392:	89 b3       	in	r24, 0x19	; 25
 394:	8c 30       	cpi	r24, 0x0C	; 12
 396:	e9 f7       	brne	.-6      	; 0x392 <ninety_degree_left+0x32>
	right_motor_speed(0);
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	cb 01       	movw	r24, r22
 39e:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 3a2:	2f ef       	ldi	r18, 0xFF	; 255
 3a4:	81 ee       	ldi	r24, 0xE1	; 225
 3a6:	94 e0       	ldi	r25, 0x04	; 4
 3a8:	21 50       	subi	r18, 0x01	; 1
 3aa:	80 40       	sbci	r24, 0x00	; 0
 3ac:	90 40       	sbci	r25, 0x00	; 0
 3ae:	e1 f7       	brne	.-8      	; 0x3a8 <ninety_degree_left+0x48>
 3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <ninety_degree_left+0x52>
 3b2:	00 00       	nop
 3b4:	08 95       	ret

000003b6 <junction_detect>:
	_delay_ms(100);
}

void junction_detect()
{
	counter++;
 3b6:	80 91 cc 02 	lds	r24, 0x02CC
 3ba:	8f 5f       	subi	r24, 0xFF	; 255
 3bc:	80 93 cc 02 	sts	0x02CC, r24
	if (counter==event_num)
 3c0:	8e 30       	cpi	r24, 0x0E	; 14
 3c2:	19 f4       	brne	.+6      	; 0x3ca <junction_detect+0x14>
	{
		ninety_degree_right();
 3c4:	0e 94 85 01 	call	0x30a	; 0x30a <ninety_degree_right>
 3c8:	08 95       	ret
	}
	else if (counter==(1+event_num))
 3ca:	8f 30       	cpi	r24, 0x0F	; 15
 3cc:	51 f4       	brne	.+20     	; 0x3e2 <junction_detect+0x2c>
	{
		left_motor_speed(0);
 3ce:	60 e0       	ldi	r22, 0x00	; 0
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	cb 01       	movw	r24, r22
 3d4:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
		right_motor_speed(0);
 3d8:	60 e0       	ldi	r22, 0x00	; 0
 3da:	70 e0       	ldi	r23, 0x00	; 0
 3dc:	cb 01       	movw	r24, r22
 3de:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 3e2:	08 95       	ret

000003e4 <main>:
void junction_detect(void);


int main(void)
{
	spi_init();
 3e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <spi_init>
	nokia_lcd_init();
 3e8:	0e 94 56 01 	call	0x2ac	; 0x2ac <nokia_lcd_init>
	 pwm_init();
 3ec:	0e 94 49 00 	call	0x92	; 0x92 <pwm_init>
	 motors_init();
 3f0:	0e 94 59 00 	call	0xb2	; 0xb2 <motors_init>
	 DDRA=0x00;
 3f4:	1a ba       	out	0x1a, r1	; 26
	 
    while(1)
    {
		
		
		if (PINA==0b00001100)
 3f6:	89 b3       	in	r24, 0x19	; 25
 3f8:	8c 30       	cpi	r24, 0x0C	; 12
 3fa:	59 f4       	brne	.+22     	; 0x412 <main+0x2e>
		{
			line_following();
 3fc:	0e 94 78 01 	call	0x2f0	; 0x2f0 <line_following>
			print_data("linefollowing");
 400:	84 e6       	ldi	r24, 0x64	; 100
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 408:	61 e0       	ldi	r22, 0x01	; 1
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 410:	f2 cf       	rjmp	.-28     	; 0x3f6 <main+0x12>
			
			
		}
			
		else if (PINA==0b00001000)
 412:	89 b3       	in	r24, 0x19	; 25
 414:	88 30       	cpi	r24, 0x08	; 8
 416:	a9 f4       	brne	.+42     	; 0x442 <main+0x5e>
		{
			left_motor_speed(0.75);       //decrease left motor speed
 418:	60 e0       	ldi	r22, 0x00	; 0
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	80 e4       	ldi	r24, 0x40	; 64
 41e:	9f e3       	ldi	r25, 0x3F	; 63
 420:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 424:	60 e0       	ldi	r22, 0x00	; 0
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	80 e8       	ldi	r24, 0x80	; 128
 42a:	9f e3       	ldi	r25, 0x3F	; 63
 42c:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00001000");
 430:	82 e7       	ldi	r24, 0x72	; 114
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 440:	da cf       	rjmp	.-76     	; 0x3f6 <main+0x12>
			
			
		}
			
		else if (PINA==0b00000100)
 442:	89 b3       	in	r24, 0x19	; 25
 444:	84 30       	cpi	r24, 0x04	; 4
 446:	a9 f4       	brne	.+42     	; 0x472 <main+0x8e>
		{
			right_motor_speed(0.75);     //decrease right motor speed
 448:	60 e0       	ldi	r22, 0x00	; 0
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	80 e4       	ldi	r24, 0x40	; 64
 44e:	9f e3       	ldi	r25, 0x3F	; 63
 450:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(1);
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	9f e3       	ldi	r25, 0x3F	; 63
 45c:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			print_data("0b00000100");
 460:	8d e7       	ldi	r24, 0x7D	; 125
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 468:	61 e0       	ldi	r22, 0x01	; 1
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 470:	c2 cf       	rjmp	.-124    	; 0x3f6 <main+0x12>
			
			
		}
		
		else if (PINA==0b00011000)
 472:	89 b3       	in	r24, 0x19	; 25
 474:	88 31       	cpi	r24, 0x18	; 24
 476:	a9 f4       	brne	.+42     	; 0x4a2 <main+0xbe>
		{
			left_motor_speed(0.5);
 478:	60 e0       	ldi	r22, 0x00	; 0
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	9f e3       	ldi	r25, 0x3F	; 63
 480:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 484:	60 e0       	ldi	r22, 0x00	; 0
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	80 e8       	ldi	r24, 0x80	; 128
 48a:	9f e3       	ldi	r25, 0x3F	; 63
 48c:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00011000");
 490:	88 e8       	ldi	r24, 0x88	; 136
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	80 e0       	ldi	r24, 0x00	; 0
 49c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 4a0:	aa cf       	rjmp	.-172    	; 0x3f6 <main+0x12>
			
	
		}
		
		else if (PINA==0b00000110)
 4a2:	89 b3       	in	r24, 0x19	; 25
 4a4:	86 30       	cpi	r24, 0x06	; 6
 4a6:	a9 f4       	brne	.+42     	; 0x4d2 <main+0xee>
		{
			left_motor_speed(0.5);
 4a8:	60 e0       	ldi	r22, 0x00	; 0
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	9f e3       	ldi	r25, 0x3F	; 63
 4b0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	70 e0       	ldi	r23, 0x00	; 0
 4b8:	80 e8       	ldi	r24, 0x80	; 128
 4ba:	9f e3       	ldi	r25, 0x3F	; 63
 4bc:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00000110");
 4c0:	83 e9       	ldi	r24, 0x93	; 147
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 4c8:	61 e0       	ldi	r22, 0x01	; 1
 4ca:	80 e0       	ldi	r24, 0x00	; 0
 4cc:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 4d0:	92 cf       	rjmp	.-220    	; 0x3f6 <main+0x12>
			
		}
		
		else if (PINA==0b00010000)
 4d2:	89 b3       	in	r24, 0x19	; 25
 4d4:	80 31       	cpi	r24, 0x10	; 16
 4d6:	a9 f4       	brne	.+42     	; 0x502 <main+0x11e>
		{
			left_motor_speed(0.25);
 4d8:	60 e0       	ldi	r22, 0x00	; 0
 4da:	70 e0       	ldi	r23, 0x00	; 0
 4dc:	80 e8       	ldi	r24, 0x80	; 128
 4de:	9e e3       	ldi	r25, 0x3E	; 62
 4e0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 4e4:	60 e0       	ldi	r22, 0x00	; 0
 4e6:	70 e0       	ldi	r23, 0x00	; 0
 4e8:	80 e8       	ldi	r24, 0x80	; 128
 4ea:	9f e3       	ldi	r25, 0x3F	; 63
 4ec:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00010000");
 4f0:	8e e9       	ldi	r24, 0x9E	; 158
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 500:	7a cf       	rjmp	.-268    	; 0x3f6 <main+0x12>
		}
		
		else if (PINA==0b00110000)
 502:	89 b3       	in	r24, 0x19	; 25
 504:	80 33       	cpi	r24, 0x30	; 48
 506:	a9 f4       	brne	.+42     	; 0x532 <main+0x14e>
		{
			left_motor_speed(0.25);
 508:	60 e0       	ldi	r22, 0x00	; 0
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	80 e8       	ldi	r24, 0x80	; 128
 50e:	9e e3       	ldi	r25, 0x3E	; 62
 510:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 514:	60 e0       	ldi	r22, 0x00	; 0
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	80 e8       	ldi	r24, 0x80	; 128
 51a:	9f e3       	ldi	r25, 0x3F	; 63
 51c:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00110000");
 520:	89 ea       	ldi	r24, 0xA9	; 169
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
		lcd_setxy(0,1);
 528:	61 e0       	ldi	r22, 0x01	; 1
 52a:	80 e0       	ldi	r24, 0x00	; 0
 52c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 530:	62 cf       	rjmp	.-316    	; 0x3f6 <main+0x12>
		}
			
		else if (PINA==0b00000010)
 532:	89 b3       	in	r24, 0x19	; 25
 534:	82 30       	cpi	r24, 0x02	; 2
 536:	a9 f4       	brne	.+42     	; 0x562 <main+0x17e>
		{
			left_motor_speed(1);
 538:	60 e0       	ldi	r22, 0x00	; 0
 53a:	70 e0       	ldi	r23, 0x00	; 0
 53c:	80 e8       	ldi	r24, 0x80	; 128
 53e:	9f e3       	ldi	r25, 0x3F	; 63
 540:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(0.25);
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	80 e8       	ldi	r24, 0x80	; 128
 54a:	9e e3       	ldi	r25, 0x3E	; 62
 54c:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00000010");
 550:	84 eb       	ldi	r24, 0xB4	; 180
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 558:	61 e0       	ldi	r22, 0x01	; 1
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 560:	4a cf       	rjmp	.-364    	; 0x3f6 <main+0x12>
		}
	
		else if (PINA==0b00000011)
 562:	89 b3       	in	r24, 0x19	; 25
 564:	83 30       	cpi	r24, 0x03	; 3
 566:	a9 f4       	brne	.+42     	; 0x592 <main+0x1ae>
		{
			left_motor_speed(1);
 568:	60 e0       	ldi	r22, 0x00	; 0
 56a:	70 e0       	ldi	r23, 0x00	; 0
 56c:	80 e8       	ldi	r24, 0x80	; 128
 56e:	9f e3       	ldi	r25, 0x3F	; 63
 570:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(0.25);
 574:	60 e0       	ldi	r22, 0x00	; 0
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	80 e8       	ldi	r24, 0x80	; 128
 57a:	9e e3       	ldi	r25, 0x3E	; 62
 57c:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			print_data("0b00000011");
 580:	8f eb       	ldi	r24, 0xBF	; 191
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 588:	61 e0       	ldi	r22, 0x01	; 1
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 590:	32 cf       	rjmp	.-412    	; 0x3f6 <main+0x12>
		}
			
		else if (PINA==0b00100000)
 592:	89 b3       	in	r24, 0x19	; 25
 594:	80 32       	cpi	r24, 0x20	; 32
 596:	69 f4       	brne	.+26     	; 0x5b2 <main+0x1ce>
		{
			left_motor_speed(0.2);
 598:	6d ec       	ldi	r22, 0xCD	; 205
 59a:	7c ec       	ldi	r23, 0xCC	; 204
 59c:	8c e4       	ldi	r24, 0x4C	; 76
 59e:	9e e3       	ldi	r25, 0x3E	; 62
 5a0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 5a4:	60 e0       	ldi	r22, 0x00	; 0
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	80 e8       	ldi	r24, 0x80	; 128
 5aa:	9f e3       	ldi	r25, 0x3F	; 63
 5ac:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 5b0:	22 cf       	rjmp	.-444    	; 0x3f6 <main+0x12>
			
		}
		
		else if (PINA==0b00000001)
 5b2:	89 b3       	in	r24, 0x19	; 25
 5b4:	81 30       	cpi	r24, 0x01	; 1
 5b6:	69 f4       	brne	.+26     	; 0x5d2 <main+0x1ee>
		{
			left_motor_speed(1);
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	9f e3       	ldi	r25, 0x3F	; 63
 5c0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(0.2);
 5c4:	6d ec       	ldi	r22, 0xCD	; 205
 5c6:	7c ec       	ldi	r23, 0xCC	; 204
 5c8:	8c e4       	ldi	r24, 0x4C	; 76
 5ca:	9e e3       	ldi	r25, 0x3E	; 62
 5cc:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 5d0:	12 cf       	rjmp	.-476    	; 0x3f6 <main+0x12>
			
		}
		
		else if (PINA==0b00001111)
 5d2:	89 b3       	in	r24, 0x19	; 25
 5d4:	8f 30       	cpi	r24, 0x0F	; 15
 5d6:	59 f4       	brne	.+22     	; 0x5ee <main+0x20a>
		{
			ninety_degree_right();
 5d8:	0e 94 85 01 	call	0x30a	; 0x30a <ninety_degree_right>
			print_data("ninety right");
 5dc:	8a ec       	ldi	r24, 0xCA	; 202
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 5e4:	61 e0       	ldi	r22, 0x01	; 1
 5e6:	80 e0       	ldi	r24, 0x00	; 0
 5e8:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 5ec:	04 cf       	rjmp	.-504    	; 0x3f6 <main+0x12>
		}
		 
		else if (PINA==0b00111100)
 5ee:	89 b3       	in	r24, 0x19	; 25
 5f0:	8c 33       	cpi	r24, 0x3C	; 60
 5f2:	59 f4       	brne	.+22     	; 0x60a <main+0x226>
		{
			ninety_degree_left();
 5f4:	0e 94 b0 01 	call	0x360	; 0x360 <ninety_degree_left>
			print_data("ninety left");
 5f8:	87 ed       	ldi	r24, 0xD7	; 215
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 600:	61 e0       	ldi	r22, 0x01	; 1
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 608:	f6 ce       	rjmp	.-532    	; 0x3f6 <main+0x12>
		}
		
		else if (PINA==0b00111111)
 60a:	89 b3       	in	r24, 0x19	; 25
 60c:	8f 33       	cpi	r24, 0x3F	; 63
 60e:	59 f4       	brne	.+22     	; 0x626 <main+0x242>
		{
			junction_detect();
 610:	0e 94 db 01 	call	0x3b6	; 0x3b6 <junction_detect>
			print_data("junction");
 614:	83 ee       	ldi	r24, 0xE3	; 227
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <print_data>
			lcd_setxy(0,1);
 61c:	61 e0       	ldi	r22, 0x01	; 1
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	0e 94 6d 01 	call	0x2da	; 0x2da <lcd_setxy>
 624:	e8 ce       	rjmp	.-560    	; 0x3f6 <main+0x12>
		}
		 
		else if (PINA==0b00011100)
 626:	89 b3       	in	r24, 0x19	; 25
 628:	8c 31       	cpi	r24, 0x1C	; 28
 62a:	69 f4       	brne	.+26     	; 0x646 <main+0x262>
		{
			left_motor_speed(0.2);
 62c:	6d ec       	ldi	r22, 0xCD	; 205
 62e:	7c ec       	ldi	r23, 0xCC	; 204
 630:	8c e4       	ldi	r24, 0x4C	; 76
 632:	9e e3       	ldi	r25, 0x3E	; 62
 634:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 638:	60 e0       	ldi	r22, 0x00	; 0
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	80 e8       	ldi	r24, 0x80	; 128
 63e:	9f e3       	ldi	r25, 0x3F	; 63
 640:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 644:	d8 ce       	rjmp	.-592    	; 0x3f6 <main+0x12>
		
		}
		 
		else if (PINA==0b00001110)
 646:	89 b3       	in	r24, 0x19	; 25
 648:	8e 30       	cpi	r24, 0x0E	; 14
 64a:	69 f4       	brne	.+26     	; 0x666 <main+0x282>
		{
			right_motor_speed(0.2);
 64c:	6d ec       	ldi	r22, 0xCD	; 205
 64e:	7c ec       	ldi	r23, 0xCC	; 204
 650:	8c e4       	ldi	r24, 0x4C	; 76
 652:	9e e3       	ldi	r25, 0x3E	; 62
 654:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(1);
 658:	60 e0       	ldi	r22, 0x00	; 0
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	80 e8       	ldi	r24, 0x80	; 128
 65e:	9f e3       	ldi	r25, 0x3F	; 63
 660:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 664:	c8 ce       	rjmp	.-624    	; 0x3f6 <main+0x12>
			
		}
		 
		else if (PINA==0b00010010)
 666:	89 b3       	in	r24, 0x19	; 25
 668:	82 31       	cpi	r24, 0x12	; 18
 66a:	69 f4       	brne	.+26     	; 0x686 <main+0x2a2>
		{
			right_motor_speed(1);
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	80 e8       	ldi	r24, 0x80	; 128
 672:	9f e3       	ldi	r25, 0x3F	; 63
 674:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(1);
 678:	60 e0       	ldi	r22, 0x00	; 0
 67a:	70 e0       	ldi	r23, 0x00	; 0
 67c:	80 e8       	ldi	r24, 0x80	; 128
 67e:	9f e3       	ldi	r25, 0x3F	; 63
 680:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 684:	b8 ce       	rjmp	.-656    	; 0x3f6 <main+0x12>
			
		}
		
		else if (PINA==0b00010110)
 686:	89 b3       	in	r24, 0x19	; 25
 688:	86 31       	cpi	r24, 0x16	; 22
 68a:	69 f4       	brne	.+26     	; 0x6a6 <main+0x2c2>
		{
			left_motor_speed(0.75);
 68c:	60 e0       	ldi	r22, 0x00	; 0
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	80 e4       	ldi	r24, 0x40	; 64
 692:	9f e3       	ldi	r25, 0x3F	; 63
 694:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 698:	60 e0       	ldi	r22, 0x00	; 0
 69a:	70 e0       	ldi	r23, 0x00	; 0
 69c:	80 e8       	ldi	r24, 0x80	; 128
 69e:	9f e3       	ldi	r25, 0x3F	; 63
 6a0:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 6a4:	a8 ce       	rjmp	.-688    	; 0x3f6 <main+0x12>
			
		}
		 
		else if (PINA==0b00011010)
 6a6:	89 b3       	in	r24, 0x19	; 25
 6a8:	8a 31       	cpi	r24, 0x1A	; 26
 6aa:	69 f4       	brne	.+26     	; 0x6c6 <main+0x2e2>
		{
			right_motor_speed(0.75);
 6ac:	60 e0       	ldi	r22, 0x00	; 0
 6ae:	70 e0       	ldi	r23, 0x00	; 0
 6b0:	80 e4       	ldi	r24, 0x40	; 64
 6b2:	9f e3       	ldi	r25, 0x3F	; 63
 6b4:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(1);
 6b8:	60 e0       	ldi	r22, 0x00	; 0
 6ba:	70 e0       	ldi	r23, 0x00	; 0
 6bc:	80 e8       	ldi	r24, 0x80	; 128
 6be:	9f e3       	ldi	r25, 0x3F	; 63
 6c0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 6c4:	98 ce       	rjmp	.-720    	; 0x3f6 <main+0x12>
		
		}
		 	
		else if (PINA==0b00010100)
 6c6:	89 b3       	in	r24, 0x19	; 25
 6c8:	84 31       	cpi	r24, 0x14	; 20
 6ca:	69 f4       	brne	.+26     	; 0x6e6 <main+0x302>
		{
			right_motor_speed(1);
 6cc:	60 e0       	ldi	r22, 0x00	; 0
 6ce:	70 e0       	ldi	r23, 0x00	; 0
 6d0:	80 e8       	ldi	r24, 0x80	; 128
 6d2:	9f e3       	ldi	r25, 0x3F	; 63
 6d4:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(0.25);
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	80 e8       	ldi	r24, 0x80	; 128
 6de:	9e e3       	ldi	r25, 0x3E	; 62
 6e0:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 6e4:	88 ce       	rjmp	.-752    	; 0x3f6 <main+0x12>
			
		}
		 
		else if (PINA==0b00001010)
 6e6:	89 b3       	in	r24, 0x19	; 25
 6e8:	8a 30       	cpi	r24, 0x0A	; 10
 6ea:	69 f4       	brne	.+26     	; 0x706 <main+0x322>
		{
			right_motor_speed(0.25);
 6ec:	60 e0       	ldi	r22, 0x00	; 0
 6ee:	70 e0       	ldi	r23, 0x00	; 0
 6f0:	80 e8       	ldi	r24, 0x80	; 128
 6f2:	9e e3       	ldi	r25, 0x3E	; 62
 6f4:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
			left_motor_speed(1);
 6f8:	60 e0       	ldi	r22, 0x00	; 0
 6fa:	70 e0       	ldi	r23, 0x00	; 0
 6fc:	80 e8       	ldi	r24, 0x80	; 128
 6fe:	9f e3       	ldi	r25, 0x3F	; 63
 700:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
 704:	78 ce       	rjmp	.-784    	; 0x3f6 <main+0x12>
			
		}
		 
		else
		{
			left_motor_speed(1);
 706:	60 e0       	ldi	r22, 0x00	; 0
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	80 e8       	ldi	r24, 0x80	; 128
 70c:	9f e3       	ldi	r25, 0x3F	; 63
 70e:	0e 94 a1 00 	call	0x142	; 0x142 <left_motor_speed>
			right_motor_speed(1);
 712:	60 e0       	ldi	r22, 0x00	; 0
 714:	70 e0       	ldi	r23, 0x00	; 0
 716:	80 e8       	ldi	r24, 0x80	; 128
 718:	9f e3       	ldi	r25, 0x3F	; 63
 71a:	0e 94 5d 00 	call	0xba	; 0xba <right_motor_speed>
 71e:	6b ce       	rjmp	.-810    	; 0x3f6 <main+0x12>

00000720 <__fixunssfsi>:
 720:	33 d0       	rcall	.+102    	; 0x788 <__fp_splitA>
 722:	88 f0       	brcs	.+34     	; 0x746 <__fixunssfsi+0x26>
 724:	9f 57       	subi	r25, 0x7F	; 127
 726:	90 f0       	brcs	.+36     	; 0x74c <__fixunssfsi+0x2c>
 728:	b9 2f       	mov	r27, r25
 72a:	99 27       	eor	r25, r25
 72c:	b7 51       	subi	r27, 0x17	; 23
 72e:	a0 f0       	brcs	.+40     	; 0x758 <__fixunssfsi+0x38>
 730:	d1 f0       	breq	.+52     	; 0x766 <__fixunssfsi+0x46>
 732:	66 0f       	add	r22, r22
 734:	77 1f       	adc	r23, r23
 736:	88 1f       	adc	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	1a f0       	brmi	.+6      	; 0x742 <__fixunssfsi+0x22>
 73c:	ba 95       	dec	r27
 73e:	c9 f7       	brne	.-14     	; 0x732 <__fixunssfsi+0x12>
 740:	12 c0       	rjmp	.+36     	; 0x766 <__fixunssfsi+0x46>
 742:	b1 30       	cpi	r27, 0x01	; 1
 744:	81 f0       	breq	.+32     	; 0x766 <__fixunssfsi+0x46>
 746:	3a d0       	rcall	.+116    	; 0x7bc <__fp_zero>
 748:	b1 e0       	ldi	r27, 0x01	; 1
 74a:	08 95       	ret
 74c:	37 c0       	rjmp	.+110    	; 0x7bc <__fp_zero>
 74e:	67 2f       	mov	r22, r23
 750:	78 2f       	mov	r23, r24
 752:	88 27       	eor	r24, r24
 754:	b8 5f       	subi	r27, 0xF8	; 248
 756:	39 f0       	breq	.+14     	; 0x766 <__fixunssfsi+0x46>
 758:	b9 3f       	cpi	r27, 0xF9	; 249
 75a:	cc f3       	brlt	.-14     	; 0x74e <__fixunssfsi+0x2e>
 75c:	86 95       	lsr	r24
 75e:	77 95       	ror	r23
 760:	67 95       	ror	r22
 762:	b3 95       	inc	r27
 764:	d9 f7       	brne	.-10     	; 0x75c <__fixunssfsi+0x3c>
 766:	3e f4       	brtc	.+14     	; 0x776 <__fixunssfsi+0x56>
 768:	90 95       	com	r25
 76a:	80 95       	com	r24
 76c:	70 95       	com	r23
 76e:	61 95       	neg	r22
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	8f 4f       	sbci	r24, 0xFF	; 255
 774:	9f 4f       	sbci	r25, 0xFF	; 255
 776:	08 95       	ret

00000778 <__fp_split3>:
 778:	57 fd       	sbrc	r21, 7
 77a:	90 58       	subi	r25, 0x80	; 128
 77c:	44 0f       	add	r20, r20
 77e:	55 1f       	adc	r21, r21
 780:	59 f0       	breq	.+22     	; 0x798 <__fp_splitA+0x10>
 782:	5f 3f       	cpi	r21, 0xFF	; 255
 784:	71 f0       	breq	.+28     	; 0x7a2 <__fp_splitA+0x1a>
 786:	47 95       	ror	r20

00000788 <__fp_splitA>:
 788:	88 0f       	add	r24, r24
 78a:	97 fb       	bst	r25, 7
 78c:	99 1f       	adc	r25, r25
 78e:	61 f0       	breq	.+24     	; 0x7a8 <__fp_splitA+0x20>
 790:	9f 3f       	cpi	r25, 0xFF	; 255
 792:	79 f0       	breq	.+30     	; 0x7b2 <__fp_splitA+0x2a>
 794:	87 95       	ror	r24
 796:	08 95       	ret
 798:	12 16       	cp	r1, r18
 79a:	13 06       	cpc	r1, r19
 79c:	14 06       	cpc	r1, r20
 79e:	55 1f       	adc	r21, r21
 7a0:	f2 cf       	rjmp	.-28     	; 0x786 <__fp_split3+0xe>
 7a2:	46 95       	lsr	r20
 7a4:	f1 df       	rcall	.-30     	; 0x788 <__fp_splitA>
 7a6:	08 c0       	rjmp	.+16     	; 0x7b8 <__fp_splitA+0x30>
 7a8:	16 16       	cp	r1, r22
 7aa:	17 06       	cpc	r1, r23
 7ac:	18 06       	cpc	r1, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	f1 cf       	rjmp	.-30     	; 0x794 <__fp_splitA+0xc>
 7b2:	86 95       	lsr	r24
 7b4:	71 05       	cpc	r23, r1
 7b6:	61 05       	cpc	r22, r1
 7b8:	08 94       	sec
 7ba:	08 95       	ret

000007bc <__fp_zero>:
 7bc:	e8 94       	clt

000007be <__fp_szero>:
 7be:	bb 27       	eor	r27, r27
 7c0:	66 27       	eor	r22, r22
 7c2:	77 27       	eor	r23, r23
 7c4:	cb 01       	movw	r24, r22
 7c6:	97 f9       	bld	r25, 7
 7c8:	08 95       	ret

000007ca <__gesf2>:
 7ca:	66 d0       	rcall	.+204    	; 0x898 <__fp_cmp>
 7cc:	08 f4       	brcc	.+2      	; 0x7d0 <__gesf2+0x6>
 7ce:	8f ef       	ldi	r24, 0xFF	; 255
 7d0:	08 95       	ret

000007d2 <__mulsf3>:
 7d2:	0b d0       	rcall	.+22     	; 0x7ea <__mulsf3x>
 7d4:	9c c0       	rjmp	.+312    	; 0x90e <__fp_round>
 7d6:	8d d0       	rcall	.+282    	; 0x8f2 <__fp_pscA>
 7d8:	28 f0       	brcs	.+10     	; 0x7e4 <__mulsf3+0x12>
 7da:	92 d0       	rcall	.+292    	; 0x900 <__fp_pscB>
 7dc:	18 f0       	brcs	.+6      	; 0x7e4 <__mulsf3+0x12>
 7de:	95 23       	and	r25, r21
 7e0:	09 f0       	breq	.+2      	; 0x7e4 <__mulsf3+0x12>
 7e2:	7e c0       	rjmp	.+252    	; 0x8e0 <__fp_inf>
 7e4:	83 c0       	rjmp	.+262    	; 0x8ec <__fp_nan>
 7e6:	11 24       	eor	r1, r1
 7e8:	ea cf       	rjmp	.-44     	; 0x7be <__fp_szero>

000007ea <__mulsf3x>:
 7ea:	c6 df       	rcall	.-116    	; 0x778 <__fp_split3>
 7ec:	a0 f3       	brcs	.-24     	; 0x7d6 <__mulsf3+0x4>

000007ee <__mulsf3_pse>:
 7ee:	95 9f       	mul	r25, r21
 7f0:	d1 f3       	breq	.-12     	; 0x7e6 <__mulsf3+0x14>
 7f2:	95 0f       	add	r25, r21
 7f4:	50 e0       	ldi	r21, 0x00	; 0
 7f6:	55 1f       	adc	r21, r21
 7f8:	62 9f       	mul	r22, r18
 7fa:	f0 01       	movw	r30, r0
 7fc:	72 9f       	mul	r23, r18
 7fe:	bb 27       	eor	r27, r27
 800:	f0 0d       	add	r31, r0
 802:	b1 1d       	adc	r27, r1
 804:	63 9f       	mul	r22, r19
 806:	aa 27       	eor	r26, r26
 808:	f0 0d       	add	r31, r0
 80a:	b1 1d       	adc	r27, r1
 80c:	aa 1f       	adc	r26, r26
 80e:	64 9f       	mul	r22, r20
 810:	66 27       	eor	r22, r22
 812:	b0 0d       	add	r27, r0
 814:	a1 1d       	adc	r26, r1
 816:	66 1f       	adc	r22, r22
 818:	82 9f       	mul	r24, r18
 81a:	22 27       	eor	r18, r18
 81c:	b0 0d       	add	r27, r0
 81e:	a1 1d       	adc	r26, r1
 820:	62 1f       	adc	r22, r18
 822:	73 9f       	mul	r23, r19
 824:	b0 0d       	add	r27, r0
 826:	a1 1d       	adc	r26, r1
 828:	62 1f       	adc	r22, r18
 82a:	83 9f       	mul	r24, r19
 82c:	a0 0d       	add	r26, r0
 82e:	61 1d       	adc	r22, r1
 830:	22 1f       	adc	r18, r18
 832:	74 9f       	mul	r23, r20
 834:	33 27       	eor	r19, r19
 836:	a0 0d       	add	r26, r0
 838:	61 1d       	adc	r22, r1
 83a:	23 1f       	adc	r18, r19
 83c:	84 9f       	mul	r24, r20
 83e:	60 0d       	add	r22, r0
 840:	21 1d       	adc	r18, r1
 842:	82 2f       	mov	r24, r18
 844:	76 2f       	mov	r23, r22
 846:	6a 2f       	mov	r22, r26
 848:	11 24       	eor	r1, r1
 84a:	9f 57       	subi	r25, 0x7F	; 127
 84c:	50 40       	sbci	r21, 0x00	; 0
 84e:	8a f0       	brmi	.+34     	; 0x872 <__stack+0x13>
 850:	e1 f0       	breq	.+56     	; 0x88a <__stack+0x2b>
 852:	88 23       	and	r24, r24
 854:	4a f0       	brmi	.+18     	; 0x868 <__stack+0x9>
 856:	ee 0f       	add	r30, r30
 858:	ff 1f       	adc	r31, r31
 85a:	bb 1f       	adc	r27, r27
 85c:	66 1f       	adc	r22, r22
 85e:	77 1f       	adc	r23, r23
 860:	88 1f       	adc	r24, r24
 862:	91 50       	subi	r25, 0x01	; 1
 864:	50 40       	sbci	r21, 0x00	; 0
 866:	a9 f7       	brne	.-22     	; 0x852 <__mulsf3_pse+0x64>
 868:	9e 3f       	cpi	r25, 0xFE	; 254
 86a:	51 05       	cpc	r21, r1
 86c:	70 f0       	brcs	.+28     	; 0x88a <__stack+0x2b>
 86e:	38 c0       	rjmp	.+112    	; 0x8e0 <__fp_inf>
 870:	a6 cf       	rjmp	.-180    	; 0x7be <__fp_szero>
 872:	5f 3f       	cpi	r21, 0xFF	; 255
 874:	ec f3       	brlt	.-6      	; 0x870 <__stack+0x11>
 876:	98 3e       	cpi	r25, 0xE8	; 232
 878:	dc f3       	brlt	.-10     	; 0x870 <__stack+0x11>
 87a:	86 95       	lsr	r24
 87c:	77 95       	ror	r23
 87e:	67 95       	ror	r22
 880:	b7 95       	ror	r27
 882:	f7 95       	ror	r31
 884:	e7 95       	ror	r30
 886:	9f 5f       	subi	r25, 0xFF	; 255
 888:	c1 f7       	brne	.-16     	; 0x87a <__stack+0x1b>
 88a:	fe 2b       	or	r31, r30
 88c:	88 0f       	add	r24, r24
 88e:	91 1d       	adc	r25, r1
 890:	96 95       	lsr	r25
 892:	87 95       	ror	r24
 894:	97 f9       	bld	r25, 7
 896:	08 95       	ret

00000898 <__fp_cmp>:
 898:	99 0f       	add	r25, r25
 89a:	00 08       	sbc	r0, r0
 89c:	55 0f       	add	r21, r21
 89e:	aa 0b       	sbc	r26, r26
 8a0:	e0 e8       	ldi	r30, 0x80	; 128
 8a2:	fe ef       	ldi	r31, 0xFE	; 254
 8a4:	16 16       	cp	r1, r22
 8a6:	17 06       	cpc	r1, r23
 8a8:	e8 07       	cpc	r30, r24
 8aa:	f9 07       	cpc	r31, r25
 8ac:	c0 f0       	brcs	.+48     	; 0x8de <__fp_cmp+0x46>
 8ae:	12 16       	cp	r1, r18
 8b0:	13 06       	cpc	r1, r19
 8b2:	e4 07       	cpc	r30, r20
 8b4:	f5 07       	cpc	r31, r21
 8b6:	98 f0       	brcs	.+38     	; 0x8de <__fp_cmp+0x46>
 8b8:	62 1b       	sub	r22, r18
 8ba:	73 0b       	sbc	r23, r19
 8bc:	84 0b       	sbc	r24, r20
 8be:	95 0b       	sbc	r25, r21
 8c0:	39 f4       	brne	.+14     	; 0x8d0 <__fp_cmp+0x38>
 8c2:	0a 26       	eor	r0, r26
 8c4:	61 f0       	breq	.+24     	; 0x8de <__fp_cmp+0x46>
 8c6:	23 2b       	or	r18, r19
 8c8:	24 2b       	or	r18, r20
 8ca:	25 2b       	or	r18, r21
 8cc:	21 f4       	brne	.+8      	; 0x8d6 <__fp_cmp+0x3e>
 8ce:	08 95       	ret
 8d0:	0a 26       	eor	r0, r26
 8d2:	09 f4       	brne	.+2      	; 0x8d6 <__fp_cmp+0x3e>
 8d4:	a1 40       	sbci	r26, 0x01	; 1
 8d6:	a6 95       	lsr	r26
 8d8:	8f ef       	ldi	r24, 0xFF	; 255
 8da:	81 1d       	adc	r24, r1
 8dc:	81 1d       	adc	r24, r1
 8de:	08 95       	ret

000008e0 <__fp_inf>:
 8e0:	97 f9       	bld	r25, 7
 8e2:	9f 67       	ori	r25, 0x7F	; 127
 8e4:	80 e8       	ldi	r24, 0x80	; 128
 8e6:	70 e0       	ldi	r23, 0x00	; 0
 8e8:	60 e0       	ldi	r22, 0x00	; 0
 8ea:	08 95       	ret

000008ec <__fp_nan>:
 8ec:	9f ef       	ldi	r25, 0xFF	; 255
 8ee:	80 ec       	ldi	r24, 0xC0	; 192
 8f0:	08 95       	ret

000008f2 <__fp_pscA>:
 8f2:	00 24       	eor	r0, r0
 8f4:	0a 94       	dec	r0
 8f6:	16 16       	cp	r1, r22
 8f8:	17 06       	cpc	r1, r23
 8fa:	18 06       	cpc	r1, r24
 8fc:	09 06       	cpc	r0, r25
 8fe:	08 95       	ret

00000900 <__fp_pscB>:
 900:	00 24       	eor	r0, r0
 902:	0a 94       	dec	r0
 904:	12 16       	cp	r1, r18
 906:	13 06       	cpc	r1, r19
 908:	14 06       	cpc	r1, r20
 90a:	05 06       	cpc	r0, r21
 90c:	08 95       	ret

0000090e <__fp_round>:
 90e:	09 2e       	mov	r0, r25
 910:	03 94       	inc	r0
 912:	00 0c       	add	r0, r0
 914:	11 f4       	brne	.+4      	; 0x91a <__fp_round+0xc>
 916:	88 23       	and	r24, r24
 918:	52 f0       	brmi	.+20     	; 0x92e <__fp_round+0x20>
 91a:	bb 0f       	add	r27, r27
 91c:	40 f4       	brcc	.+16     	; 0x92e <__fp_round+0x20>
 91e:	bf 2b       	or	r27, r31
 920:	11 f4       	brne	.+4      	; 0x926 <__fp_round+0x18>
 922:	60 ff       	sbrs	r22, 0
 924:	04 c0       	rjmp	.+8      	; 0x92e <__fp_round+0x20>
 926:	6f 5f       	subi	r22, 0xFF	; 255
 928:	7f 4f       	sbci	r23, 0xFF	; 255
 92a:	8f 4f       	sbci	r24, 0xFF	; 255
 92c:	9f 4f       	sbci	r25, 0xFF	; 255
 92e:	08 95       	ret

00000930 <_exit>:
 930:	f8 94       	cli

00000932 <__stop_program>:
 932:	ff cf       	rjmp	.-2      	; 0x932 <__stop_program>
